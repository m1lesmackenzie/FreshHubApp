import 'package:flutter/material.dart';
import 'dart:convert';

void main(){
  runApp(RecipeHub());
}

final ThemeData _themeData = ThemeData(
  primaryColor: Colors.green,
);

///Root MaterialApp
class RecipeHub extends StatefulWidget{
  List data;
  @override
  _RecipeHubState createState() => _RecipeHubState();
}

class _RecipeHubState extends State<RecipeHub> {
  @override
  Widget build(BuildContext context) {
    ///var _routes = <String, WidgetBuilder>{
    ///  "/recipes" :  (BuildContext context) =>  new RecipeHubState(),
    /// };
    /// routes: _routes,
    return Scaffold(
        appBar: AppBar(title: Text("Recipe Hub")),
        body: Container(
          child: Center(
              child: FutureBuilder(
                  future: DefaultAssetBundle
                      .of(context)
                      .loadString('load_json/recipe.json'),
                  builder: (context, snapshot) {
                    var mydata = jsonDecode(snapshot.data.toString());
                    return ListView.builder(
                      itemBuilder: (BuildContext context, int index) {
                        return new Card(
                          child: new Column(
                              crossAxisAlignment: CrossAxisAlignment.stretch,
                              children: <Widget>[
                                RichText(
                                  text: TextSpan(
                                    style: DefaultTextStyle.of(context).style,
                                    children: <TextSpan>[
                                      TextSpan(
                                        text: mydata[index]['name'],
                                        style: TextStyle(
                                          color: Colors.black,
                                          fontWeight: FontWeight.bold,
                                          fontSize: 16
                                        ),
                                      ),
                                      TextSpan(
                                        text: "\n\nIngredients: \n",
                                        style: TextStyle(fontStyle: FontStyle.italic, color: Colors.green, fontWeight: FontWeight.bold),
                                      ),
                                      TextSpan(
                                        text: mydata[index]['ingredients'],
                                        style: TextStyle(color : Colors.black)
                                      ),
                                      TextSpan(
                                        text: "\n\nInstructions: \n",
                                        style: TextStyle(fontStyle: FontStyle.italic, color: Colors.green, fontWeight: FontWeight.bold),
                                      ),
                                      TextSpan(
                                          text: mydata[index]['instructions'],
                                          style: TextStyle(color : Colors.black)
                                      ),
                                    ],
                                  ),
                                )
                              ]
                          ),
                        );
                      },
                      itemCount: mydata == null ? 0 : mydata.length,
                    );
                  }
              )
          ),
        )
    );
  }
}
